@use "sass:color";
@use "sass:list";
@use "sass:map";
@use "sass:meta";
@use "sass:string";

@tailwind base;

@tailwind components;

@tailwind utilities;

@layer utilities {
  .outline-reset,
  .outline-reset:focus,
  .outline-reset:focus-within {
    outline: 0;
  }
}

@layer components {
  $lightColors: (
    always-white: string.unquote("0, 0%, 100%"),
    always-black: string.unquote("0, 0%, 0%"),
    background: string.unquote("224, 30%, 20%"),
    disabled: string.unquote("0, 0%, 0%"),
    divider: string.unquote("224, 5%, 65%"),
    editor: string.unquote("0, 0%, 100%"),
    gray-1: string.unquote("224, 0%, 87.8%"),
    gray-2: string.unquote("224, 5%, 58.7%"),
    gray-3: string.unquote("224, 10%, 32.5%"),
    gray-4: string.unquote("224, 16%, 12.8%"),
    green-1: string.unquote("122.4, 39.4%, 36.2%"),
    hover-overlay: string.unquote("224, 70%, 58%"),
    input: string.unquote("224, 40%, 97%"),
    on-primary: string.unquote("0, 0%, 100%"),
    on-surface: string.unquote("0, 0%, 0%"),
    primary: string.unquote("224, 100%, 58%"),
    background-primary: string.unquote("224, 100%, 58%"),
    primary-disabled: string.unquote("224, 30%, 77%"),
    red-1: string.unquote("349.1, 100%, 34.5%"),
    secondary: string.unquote("224, 15%, 90.8%"),
    surface: string.unquote("0, 0%, 100%"),
    txt: string.unquote("0, 0%, 0%"),
    violet-1: string.unquote("264.8, 57.9%, 41%"),
    violet-2: string.unquote("264.8, 23.7%, 63.5%"),
    yellow-1: string.unquote("39.1, 100%, 66.3%"),
  );

  $lightOpacities: (
    background: 0.05,
    disabled: 0.12,
    divider: 1,
    secondary: 1,
    text-disabled: 0.38,
    text-hint: 0.38,
    text-icon: 0.54,
    text-primary: 0.87,
    text-secondary: 0.54,
  );

  $darkColors: (
    always-white: string.unquote("0, 0%, 100%"),
    always-black: string.unquote("0, 0%, 0%"),
    background: string.unquote("225, 5%, 10%"),
    disabled: string.unquote("0, 100%, 100%"),
    divider: string.unquote("0, 0%, 100%"),
    editor: string.unquote("224, 5%, 17%"),
    gray-1: string.unquote("224, 0%, 87.8%"),
    gray-2: string.unquote("224, 5%, 58.7%"),
    gray-3: string.unquote("224, 10%, 32.5%"),
    gray-4: string.unquote("224, 16%, 12.8%"),
    green-1: string.unquote("122.4, 35.4%, 50.2%"),
    hover-overlay: string.unquote("215, 39%, 30%"),
    input: string.unquote("224, 5%, 17%"),
    on-primary: string.unquote("0, 0%, 100%"),
    on-surface: string.unquote("0, 100%, 100%"),
    primary: string.unquote("224, 100%, 63%"),
    background-primary: string.unquote("224, 100%, 30%"),
    primary-disabled: string.unquote("224, 30%, 77%"),
    red-1: string.unquote("349.1, 75%, 50%"),
    secondary: string.unquote("224, 10%, 25%"),
    surface: string.unquote("224, 5%, 12.4%"),
    txt: string.unquote("0, 100%, 100%"),
    violet-1: string.unquote("264.8, 58.9%, 61%"),
    violet-2: string.unquote("264.8, 35%, 73.5%"),
    yellow-1: string.unquote("39.1, 100%, 66.3%"),
  );

  $darkOpacities: (
    background: 1,
    disabled: 0.12,
    divider: 0.1,
    secondary: 0.87,
    text-disabled: 0.38,
    text-hint: 0.6,
    text-icon: 0.38,
    text-primary: 1,
    text-secondary: 0.87,
  );

  @each $invertedColor in "surface", "txt" {
    $lightColors: map.set($lightColors, "#{$invertedColor}-inverted", map.get($darkColors, $invertedColor));
    $darkColors: map.set($darkColors, "#{$invertedColor}-inverted", map.get($lightColors, $invertedColor));
  }

  @function validateVariables($setA, $setB, $themeName) {
    @each $name, $value in $setB {
      @if not map.get($setA, $name) {
        @error "Missing variable #{meta.inspect($name)} in #{$themeName} variable set.";
      }
    }

    @return null;
  }

  // IGNOREME
  $validatedLight: validateVariables($lightColors, $darkColors, 'light theme');
  // IGNOREME
  $validatedDark: validateVariables($darkColors, $lightColors, 'dark theme');

  @mixin themeVariables($colors, $themeClass) {
    @each $name, $color in $colors {
      --#{$name}: #{$color};
    }
  }

  @mixin opacityVariables($opacities) {
    @each $name, $value in $opacities {
      --opacity-#{$name}: #{$value};
    }
  }

  :root,
  .__light-mode {
    @include themeVariables($lightColors, '.__light-mode');
    @include opacityVariables($lightOpacities);
  }

  .__dark-mode,
  :root.__dark-mode {
    @include themeVariables($darkColors, '.__dark-mode');
    @include opacityVariables($darkOpacities);
  }
}
